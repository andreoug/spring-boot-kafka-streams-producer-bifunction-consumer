spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:producer, bifunction, consumer}

---
#'producer' profile only

spring:
  config:
    activate:
      on-profile: producer
  kafka:
    template:
      default-topic: ${KAFKA_DEFAULT_TOPIC:topic}
      topic:  ${KAFKA_TOPIC:rules.topic}
    producer:
      bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: action:com.pilot.commons.Action, sms:com.pilot.commons.Sms, smsRule:com.pilot.commons.SmsRule

server:
  port: 9000

springdoc:
  api-docs:
    path: /api-docs
---

#'consumer' profile only
spring:
  config:
    activate:
      on-profile: consumer
  cloud.stream:
    function:
      definition: consumeService
    bindings:
      consumeService-in-0:
        destination: ${KAFKA_ACTIVE_TOPIC:active.topic}
    kafka:
      streams:
        binder:
          configuration:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            spring.json.trusted.packages: '*'
            spring.json.type.mapping: action:com.pilot.commons.Action, sms:com.pilot.commons.Sms
      binder:
        brokers: ${KAFKA_SERVERS:localhost:9092}
---

#'bifunction' profile only

spring:
  config:
    activate:
      on-profile: bifunction
  cloud.stream:
    function:
      definition: bifunctionProcessor
    bindings:
      bifunctionProcessor-in-0:
        destination: ${KAFKA_DEFAULT_TOPIC:topic}
      bifunctionProcessor-in-1:
        destination: ${KAFKA_TOPIC:rules.topic}
      bifunctionProcessor-out-0:
        destination: ${KAFKA_ACTIVE_TOPIC:active.topic}
    kafka:
      streams:
        binder:
          configuration:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: org.springframework.kafka.support.serializer.JsonSerializer
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            spring.json.trusted.packages: '*'
            spring.json.type.mapping: action:com.pilot.commons.Action, sms:com.pilot.commons.Sms, smsRule:com.pilot.commons.SmsRule
      binder:
        brokers: ${KAFKA_SERVERS:localhost:9092}
---

